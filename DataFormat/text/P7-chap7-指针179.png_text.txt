7.4.6  指针的强制类型转换指针都有类型,指针类型决定了如何对它所指向的内存空间内容进行解释和操作。决定了指针运算时如何映射到实际的地址。不同类型指针之间不要互相赋值。但是任何情况都有例外,在编写些底层相关的代码时,经常需要对同一内存空间的内容做出不同的解释,这种需求一般通过不同指针类型之间的赋值来完成。C 语言编译器做了折中处理。如果语法检查发现有不同类型指针之间的赋值。编译器会给出一个警告。提示这里要小小心,如果编程者确信自己就是要这么做。可以通过强制类型转换的方式;  避免编译器的警告0由于加上了强制类型转换。编译器认为编程者已经int30X00112233;charb[]"hello" ;清楚了自己的行为,故不再给出警告0char *pa(char* )&a;指针的强制类型转换 (隐式类型转换同样)  不会更int*pbint*)b;改指针的值只是改娈了对指针指向内容的解释