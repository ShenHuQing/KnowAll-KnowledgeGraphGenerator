6.5.4标准字符串处理函数例6-21函数 strncat 操作示例1 char test[l0] = "testtest'例6-21代码分析2 char dst[24] = "Ilove c";第2行,定义一个字符串 dst,内容为字符串"Ilovec" (不含双引号)3 strcat(dst。and c++");将字符串" and c++"追加在 dst 字符串尾部4printf("@osIn" , dst);鞲行,将字符串" and java"前 4个字符追加到 dst 尾部5 strncat(dst。andjava"4);将 dst 置为一个空字符串6Printf("Oosl" , dst);第8行,将"abcdefghijklmnopqrstuvwxyz  '前 26  个字符追加到1dst[0]=0; /1令 dst 为一个空字符串dst 尾部。注意dst数组空间只有24个 (第2 行的数组定义)因此,该语句实际上发生了数组越界 ,这样的代码有8 strncat(dst, "abcdefghijklmnopqrstuVwXYZ'26);潜在的风险!9printf("Oosln'dst);第9行,看上去输出结果是正常的。但数组 dst 其实是一个字10 printf("@sIn"test);符序列(不是字符串)它的合法空间 24 个字符序列并不包含结束符,该数组包括24个字母 abcdefghijklmnopqrstuVwx ,输出结果 (不同电脑的结果可能不同)数组后面跟3  个元素是"y2" (最后一个是"10')之后把Ilove c and c++这27  个字符作为一个字符串进行访问,属于越界访问!Ilove c and c++ and第10行,输出字符串 test,发现其内容被修改了。原因是_abcdefghijklmnopqrstuVwxyZ第 &行的 strncat 函数越界访问了数组 dst,越界后访问了数组JZtest 的内存。把"y2"写入数组 test, 非常隐蔽地修改了数组 test的内容Prinff