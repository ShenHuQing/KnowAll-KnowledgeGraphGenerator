8.7.2函数指针用祛与惠义例 8-13通用冒泡排序函数 写一个通用的冒泡排序函数,可以对任何数据类型的数组进行任何形式(升序或降序)  的稳定排序,具体的数组元素比较行为通过函数指针实现。因为数组类型不确定,所以采用通用型指针 void*作为函数接口,设计通用冒泡排序函数原型为:Void吕_bub_sort(void *array,int Ien,int elemsize,int*cmp ) ( const void米const void *) );其中 array 是数组起始地址,elemsize 是数组单个元素所占内存空间的字节数,len 是数细长度 (数组元素个数)cmp 是函数指针,指向具有如下函数原型的比较函数:intCmPconst void*e1,constVoid*e2);cmp 比较两个元素 e1 和 e2 的顺序关系。如果 e1 指向的元素排在 e2 指向元素的前面,cmp返回1,否则返回0。因为 cmp 不会改娈被比较的元素,因此参数是 const 指针。在冒泡排序的算法框架中需要交换顺序不对的两个元素的值,但数组元素类型在函数设计时是未知的,不能简单地通过赋值运算完成元素交换。需要设计一个通用函数来完成元素逐个字节的内容交换 (原始内存空间复制)