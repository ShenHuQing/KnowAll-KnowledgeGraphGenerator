函数应用案例判断又是否为素数,函数prime(x)?素数:只能被1和其自身整除的正整数。方法1:  2~ x/2 的任何数都不能整除又,则2素数。方法2:  大于2的奇数才能是素数;  奇数只可能被奇数整除。3 ~ X/2的任何奇数都不能整除又,则x为素数。方法3:  方法1或方法2 中的循环#include〈stdio.h〉int prime(int);int prime(intx)区间只需为3^sqrt(x)即可。int main()int1prime_-=1;为什么?intX;if(X>2&& (X%2二二0) ) //x为大于2的偶数scanf'%d"&X); //为大于1的整数prime_二011  不用1<二sqrt(x)printf(prime(x)?"is prime'"Not prime" );else11 *为大于3的奇数的情况for(i=3;i*i<二 X;1十=2)return 8;}/1  仅判断x是否被奇数整除int prime(intX)for(123;1<二X/2;1 +=2)int1,prime_flag三1;if(X%i二二0)用任何一种方法都能通过fon(i=2;1<二 X/2;i++)prime_二0;if(X%i二二0)break;C4-卫。prime_flag二0;break;方法3非常高效!}return primereturn prime_flag;是否还有更快的方法?flagf1agf1agf1ag;